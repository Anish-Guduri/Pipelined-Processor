$date
	Mon Oct 14 18:56:10 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test_RISCV $end
$var reg 1 ! clk1 $end
$var reg 1 " clk2 $end
$var integer 32 # k [31:0] $end
$scope module risc_p $end
$var wire 1 ! clk1 $end
$var wire 1 " clk2 $end
$var parameter 5 $ ADD $end
$var parameter 5 % AND $end
$var parameter 5 & ASR $end
$var parameter 5 ' B $end
$var parameter 5 ( BEQ $end
$var parameter 5 ) BGT $end
$var parameter 3 * BRANCH $end
$var parameter 5 + CALL $end
$var parameter 5 , CMP $end
$var parameter 5 - DIV $end
$var parameter 3 . HAT $end
$var parameter 5 / LD $end
$var parameter 3 0 LOAD $end
$var parameter 5 1 LSL $end
$var parameter 5 2 LSR $end
$var parameter 5 3 MOD $end
$var parameter 5 4 MOV $end
$var parameter 5 5 MUL $end
$var parameter 5 6 NOP $end
$var parameter 5 7 NOT $end
$var parameter 5 8 OR $end
$var parameter 5 9 RET $end
$var parameter 3 : RM_ALU $end
$var parameter 3 ; RR_ALU $end
$var parameter 5 < ST $end
$var parameter 3 = STORE $end
$var parameter 5 > SUB $end
$var reg 1 ? HALTED $end
$var reg 32 @ PC [31:0] $end
$var reg 1 A TAKEN_BRANCH $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1 >
b11 =
b1111 <
b0 ;
b1 :
b10100 9
b111 8
b1000 7
b1101 6
b10 5
b1001 4
b100 3
b1011 2
b1010 1
b10 0
b1110 /
b101 .
b11 -
b101 ,
b10011 +
b100 *
b10001 )
b10000 (
b10010 '
b1100 &
b110 %
b0 $
$end
#0
$dumpvars
0A
b0 @
0?
b10000 #
x"
x!
$end
#5
1!
#10
b1 @
0!
#15
1!
#20
b10 @
0!
#25
1!
#30
b11 @
0!
#35
1!
#40
b100 @
0!
#45
1!
#50
b101 @
0!
#55
1!
#60
b110 @
0!
#65
1!
#70
b111 @
0!
#75
1!
#80
b1000 @
0!
#85
1!
#90
b1001 @
0!
#95
1!
#100
b1010 @
0!
#105
1!
#110
b1011 @
0!
#115
1!
#120
b1100 @
0!
#125
1!
#130
b1101 @
0!
#135
1!
#140
b1110 @
0!
#145
1!
#150
b1111 @
0!
#155
1!
#160
b10000 @
0!
#165
1!
#170
b10001 @
0!
#175
1!
#180
b10010 @
0!
#185
1!
#190
b10011 @
0!
#195
1!
#200
b10100 @
0!
#250
b110 #
#600
b0 @
