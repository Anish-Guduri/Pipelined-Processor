$date
	Wed Oct 23 21:43:44 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 1 ! reset $end
$var wire 32 " output_OF_PC [31:0] $end
$var wire 32 # output_OF_IR [31:0] $end
$var wire 22 $ output_EX_controlBus [21:0] $end
$var wire 32 % output_EX_PC [31:0] $end
$var wire 32 & output_EX_IR [31:0] $end
$var wire 32 ' outputPC [31:0] $end
$var wire 1 ( is_Branch_Taken $end
$var wire 4 ) isStore_result [3:0] $end
$var wire 4 * isReturn_result [3:0] $end
$var wire 32 + input_OF_PC [31:0] $end
$var wire 32 , input_EX_PC [31:0] $end
$var wire 32 - input_EX_IR [31:0] $end
$var wire 32 . branchTarget [31:0] $end
$var wire 32 / branchPC [31:0] $end
$var wire 32 0 PC [31:0] $end
$var wire 22 1 Output_OF_controlBus [21:0] $end
$var wire 32 2 Operand_EX_B [31:0] $end
$var wire 32 3 Operand_EX_A [31:0] $end
$var wire 32 4 Operand_EX_2 [31:0] $end
$var wire 32 5 Operand_B [31:0] $end
$var wire 32 6 Operand_A [31:0] $end
$var wire 32 7 Operand_2 [31:0] $end
$var wire 22 8 Input_OF_controlBus [21:0] $end
$var wire 32 9 Input_OF_IR [31:0] $end
$var wire 22 : Input_EX_controlBus [21:0] $end
$var wire 32 ; IR [31:0] $end
$var wire 32 < EX_op2 [31:0] $end
$var wire 32 = EX_branchTarget [31:0] $end
$var wire 32 > ALU_Result [31:0] $end
$var reg 1 ? clk $end
$scope module processor $end
$var wire 32 @ EX_branchPC [31:0] $end
$var wire 1 A EX_is_Branch_Taken $end
$var wire 1 ? clk $end
$var wire 32 B output_OF_PC [31:0] $end
$var wire 32 C output_OF_IR [31:0] $end
$var wire 32 D output_IF_PC [31:0] $end
$var wire 22 E output_EX_controlBus [21:0] $end
$var wire 32 F output_EX_PC [31:0] $end
$var wire 32 G output_EX_IR [31:0] $end
$var wire 32 H op2 [31:0] $end
$var wire 32 I op1 [31:0] $end
$var wire 1 ( is_Branch_Taken $end
$var wire 4 J isStore_result [3:0] $end
$var wire 4 K isReturn_result [3:0] $end
$var wire 32 L input_OF_PC [31:0] $end
$var wire 32 M input_EX_PC [31:0] $end
$var wire 32 N input_EX_IR [31:0] $end
$var wire 32 O branchTarget [31:0] $end
$var wire 32 P branchPC [31:0] $end
$var wire 22 Q Output_OF_controlBus [21:0] $end
$var wire 32 R Operand_EX_B [31:0] $end
$var wire 32 S Operand_EX_A [31:0] $end
$var wire 32 T Operand_EX_2 [31:0] $end
$var wire 32 U Operand_B [31:0] $end
$var wire 32 V Operand_A [31:0] $end
$var wire 32 W Operand_2 [31:0] $end
$var wire 22 X Input_OF_controlBus [21:0] $end
$var wire 32 Y Input_OF_IR [31:0] $end
$var wire 22 Z Input_EX_controlBus [21:0] $end
$var wire 32 [ IR [31:0] $end
$var wire 32 \ EX_op2 [31:0] $end
$var wire 32 ] EX_branchTarget [31:0] $end
$var wire 32 ^ ALU_Result [31:0] $end
$var reg 32 _ PC [31:0] $end
$var reg 1 ! reset $end
$scope module ALU_cycle $end
$var wire 32 ` input_EX_PC [31:0] $end
$var wire 32 a input_EX_IR [31:0] $end
$var wire 2 b flags [1:0] $end
$var wire 32 c Operand_EX_B [31:0] $end
$var wire 32 d Operand_EX_A [31:0] $end
$var wire 32 e Operand_EX_2 [31:0] $end
$var wire 22 f Input_EX_controlBus [21:0] $end
$var wire 1 ( EX_is_Branch_Taken $end
$var wire 32 g EX_branchTarget [31:0] $end
$var wire 32 h EX_branchPC [31:0] $end
$var wire 32 i ALU_Result [31:0] $end
$var reg 32 j EX_op2 [31:0] $end
$var reg 32 k output_EX_IR [31:0] $end
$var reg 32 l output_EX_PC [31:0] $end
$var reg 22 m output_EX_controlBus [21:0] $end
$scope module ALU_module $end
$var wire 13 n ALU_Signals [21:9] $end
$var wire 32 o Operand_EX_B [31:0] $end
$var wire 32 p Operand_EX_A [31:0] $end
$var reg 32 q EX_ALU_Result [31:0] $end
$var reg 2 r flags [1:0] $end
$var reg 1 s isAdd $end
$var reg 1 t isAnd $end
$var reg 1 u isAsr $end
$var reg 1 v isCmp $end
$var reg 1 w isDiv $end
$var reg 1 x isLsl $end
$var reg 1 y isLsr $end
$var reg 1 z isMod $end
$var reg 1 { isMov $end
$var reg 1 | isMul $end
$var reg 1 } isNot $end
$var reg 1 ~ isOr $end
$var reg 1 !" isSub $end
$upscope $end
$scope module branchUnit $end
$var wire 2 "" flags [1:0] $end
$var wire 32 #" Operand_EX_A [31:0] $end
$var wire 22 $" Input_EX_controlBus [21:0] $end
$var wire 32 %" EX_branchTarget [31:0] $end
$var wire 32 &" EX_branchPC [31:0] $end
$var reg 1 ( EX_is_Branch_Taken $end
$var reg 1 '" isBeq $end
$var reg 1 (" isBgt $end
$var reg 1 )" isRet $end
$var reg 1 *" isUbranch $end
$scope module isReturn_mux $end
$var wire 1 )" selectLine $end
$var wire 32 +" input1 [31:0] $end
$var wire 32 ," input0 [31:0] $end
$var parameter 32 -" regSize $end
$var reg 32 ." output_y [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module OperandFetch $end
$var wire 1 ? clk $end
$var wire 32 /" op2 [31:0] $end
$var wire 32 0" op1 [31:0] $end
$var wire 4 1" isStore_result [3:0] $end
$var wire 4 2" isReturn_result [3:0] $end
$var wire 32 3" immediateVlaue [31:0] $end
$var wire 32 4" branchTarget [31:0] $end
$var wire 32 5" Operand_B [31:0] $end
$var wire 22 6" Input_OF_controlBus [21:0] $end
$var wire 32 7" Input_OF_PC [31:0] $end
$var wire 32 8" Input_OF_IR [31:0] $end
$var reg 32 9" Operand_2 [31:0] $end
$var reg 32 :" Operand_A [31:0] $end
$var reg 22 ;" Output_OF_controlBus [21:0] $end
$var reg 1 <" isImmediate $end
$var reg 1 =" isReturn $end
$var reg 1 >" isStore $end
$var reg 32 ?" output_OF_IR [31:0] $end
$var reg 32 @" output_OF_PC [31:0] $end
$var reg 4 A" ra [3:0] $end
$var reg 4 B" rd [3:0] $end
$var reg 4 C" rs1 [3:0] $end
$var reg 4 D" rs2 [3:0] $end
$scope module calc_Immx_branchTarget $end
$var wire 1 E" uModifier $end
$var wire 32 F" instruction [31:0] $end
$var wire 32 G" input_OF_PC [31:0] $end
$var wire 1 H" hModifier $end
$var reg 32 I" Immx [31:0] $end
$var reg 32 J" branchTarget [31:0] $end
$var reg 32 K" tempBranchTarget [31:0] $end
$upscope $end
$scope module isImmediate_mux $end
$var wire 32 L" input1 [31:0] $end
$var wire 1 <" selectLine $end
$var wire 32 M" input0 [31:0] $end
$var parameter 32 N" regSize $end
$var reg 32 O" output_y [31:0] $end
$upscope $end
$scope module isRet_Mux $end
$var wire 4 P" input0 [3:0] $end
$var wire 4 Q" input1 [3:0] $end
$var wire 1 =" selectLine $end
$var parameter 32 R" regSize $end
$var reg 4 S" output_y [3:0] $end
$upscope $end
$scope module isStore_mux $end
$var wire 4 T" input0 [3:0] $end
$var wire 4 U" input1 [3:0] $end
$var wire 1 >" selectLine $end
$var parameter 32 V" regSize $end
$var reg 4 W" output_y [3:0] $end
$upscope $end
$upscope $end
$scope module controlUnit $end
$var wire 1 ! reset $end
$var wire 32 X" Input_OF_IR [31:0] $end
$var reg 1 Y" I $end
$var reg 22 Z" controlBus [21:0] $end
$var reg 1 [" isAdd $end
$var reg 1 \" isAnd $end
$var reg 1 ]" isAsr $end
$var reg 1 ^" isBeq $end
$var reg 1 _" isBgt $end
$var reg 1 `" isCall $end
$var reg 1 a" isCmp $end
$var reg 1 b" isDiv $end
$var reg 1 c" isImmediate $end
$var reg 1 d" isLd $end
$var reg 1 e" isLsl $end
$var reg 1 f" isLsr $end
$var reg 1 g" isMod $end
$var reg 1 h" isMov $end
$var reg 1 i" isMul $end
$var reg 1 j" isNot $end
$var reg 1 k" isOr $end
$var reg 1 l" isRet $end
$var reg 1 m" isSt $end
$var reg 1 n" isSub $end
$var reg 1 o" isUbranch $end
$var reg 1 p" isWb $end
$var reg 1 q" op1 $end
$var reg 1 r" op2 $end
$var reg 1 s" op3 $end
$var reg 1 t" op4 $end
$var reg 1 u" op5 $end
$upscope $end
$scope module iFetch $end
$var wire 32 v" branchPC [31:0] $end
$var wire 1 ? clk $end
$var wire 32 w" inputPC [31:0] $end
$var wire 1 ( is_Branch_Taken $end
$var wire 1 ! reset $end
$var wire 32 x" mux_nextPC [31:0] $end
$var wire 32 y" IR [31:0] $end
$var reg 32 z" PC [31:0] $end
$var reg 32 {" address [31:0] $end
$var reg 32 |" outputPC [31:0] $end
$scope module iMemory $end
$var wire 32 }" address [31:0] $end
$var reg 32 ~" instruction [31:0] $end
$var reg 32 !# temp [31:0] $end
$var integer 32 "# file [31:0] $end
$var integer 32 ## i [31:0] $end
$var integer 32 $# readResult [31:0] $end
$upscope $end
$scope module pc_mux $end
$var wire 32 %# input0 [31:0] $end
$var wire 32 &# input1 [31:0] $end
$var wire 1 ( selectLine $end
$var parameter 32 '# regSize $end
$var reg 32 (# output_y [31:0] $end
$upscope $end
$upscope $end
$scope module latch_if_of $end
$var wire 32 )# IF_instruction [31:0] $end
$var wire 1 ? clk $end
$var wire 32 *# output_IF_PC [31:0] $end
$var reg 32 +# Input_OF_PC [31:0] $end
$var reg 32 ,# OF_instruction [31:0] $end
$upscope $end
$scope module of_ex_latch $end
$var wire 32 -# OF_branchTarget [31:0] $end
$var wire 32 .# Operand_OF_2 [31:0] $end
$var wire 32 /# Operand_OF_A [31:0] $end
$var wire 32 0# Operand_OF_B [31:0] $end
$var wire 22 1# Output_OF_controlBus [21:0] $end
$var wire 1 ? clk $end
$var wire 32 2# output_OF_IR [31:0] $end
$var wire 32 3# output_OF_PC [31:0] $end
$var reg 32 4# EX_branchTarget [31:0] $end
$var reg 22 5# Input_EX_controlBus [21:0] $end
$var reg 32 6# Operand_EX_2 [31:0] $end
$var reg 32 7# Operand_EX_A [31:0] $end
$var reg 32 8# Operand_EX_B [31:0] $end
$var reg 32 9# input_EX_IR [31:0] $end
$var reg 32 :# input_EX_PC [31:0] $end
$upscope $end
$scope module r_File_processor $end
$var wire 1 ? clk $end
$var wire 4 ;# dReg [3:0] $end
$var wire 4 <# op1 [3:0] $end
$var wire 4 =# op2 [3:0] $end
$var wire 1 ! reset $end
$var wire 32 ># wrData [31:0] $end
$var wire 1 ?# writeEnable $end
$var reg 32 @# rdData1 [31:0] $end
$var reg 32 A# rdData2 [31:0] $end
$var reg 1 B# temp $end
$var integer 32 C# k [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000 '#
b100 V"
b100 R"
b100000 N"
b100000 -"
$end
#0
$dumpvars
b10000 C#
0B#
bx A#
bx @#
z?#
bz >#
bx =#
bx <#
bz ;#
bx :#
bx 9#
bx 8#
bx 7#
bx 6#
bx 5#
bx 4#
bx 3#
bx 2#
b0 1#
bx 0#
bx /#
bx .#
bx -#
bx ,#
bx +#
bx *#
bx )#
b100 (#
bx &#
b100 %#
b1 $#
b101 ##
b10000000000000000000000000000011 "#
b1100111100000000000000000 !#
bx ~"
bx }"
bx |"
bx {"
b0 z"
bx y"
b100 x"
bx w"
bx v"
xu"
xt"
xs"
xr"
xq"
xp"
xo"
xn"
xm"
xl"
xk"
xj"
xi"
xh"
xg"
xf"
xe"
xd"
xc"
xb"
xa"
x`"
x_"
x^"
x]"
x\"
x["
b0 Z"
xY"
bx X"
bx W"
bx U"
bx T"
bx S"
b1111 Q"
bx P"
bx O"
bx M"
bx L"
bx K"
bx J"
bx I"
xH"
bx G"
bx F"
xE"
bx D"
bx C"
bx B"
b1111 A"
bx @"
bx ?"
0>"
0="
0<"
b0 ;"
bx :"
bx 9"
bx 8"
bx 7"
b0 6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx ,"
bx +"
x*"
x)"
x("
x'"
bx &"
bx %"
bx $"
bx #"
bx ""
x!"
x~
x}
x|
x{
xz
xy
xx
xw
xv
xu
xt
xs
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
b0 X
bx W
bx V
bx U
bx T
bx S
bx R
b0 Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
zA
bz @
1?
bx >
bx =
bx <
bx ;
bx :
bx 9
b0 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
b0 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
x(
bx '
bx &
bx %
bx $
bx #
bx "
1!
$end
#2000
0!
#5000
0(
b1001100010000000000000000000100 ;
b1001100010000000000000000000100 [
b1001100010000000000000000000100 y"
b1001100010000000000000000000100 ~"
b1001100010000000000000000000100 )#
b0 $
b0 E
b0 m
0*"
0("
0'"
0)"
b0 b
b0 r
b0 ""
b0 >
b0 ^
b0 i
b0 q
0{
0}
0t
0~
0u
0y
0x
0z
0w
0|
0v
0!"
0s
b1000 x"
b1000 (#
b0 n
b1000 %#
b100 z"
b0 '
b0 D
b0 |"
b0 *#
b0 {"
b0 }"
b0 :
b0 Z
b0 f
b0 $"
b0 5#
0?
#10000
1?
#15000
b0 6
b0 V
b0 :"
b0 /#
b0 7
b0 W
b0 9"
b0 .#
b1000000000000001100000 1
b1000000000000001100000 Q
b1000000000000001100000 ;"
b1000000000000001100000 1#
1<"
0="
0>"
1h"
0j"
0\"
0k"
0]"
0f"
0e"
0g"
0b"
0i"
0a"
0n"
0["
0`"
0o"
1p"
1c"
0l"
0_"
0^"
0d"
0m"
b100 5
b100 U
b100 5"
b100 O"
b100 0#
b0 H
b0 /"
b0 M"
b0 A#
b0 I
b0 0"
b0 @#
b0 *
b0 K
b0 2"
b0 S"
b0 <#
b0 )
b0 J
b0 1"
b0 W"
b0 =#
b100 3"
b100 I"
b100 L"
b101100000001000000000000000100 ;
b101100000001000000000000000100 [
b101100000001000000000000000100 y"
b101100000001000000000000000100 ~"
b101100000001000000000000000100 )#
b1000000000000001100000 8
b1000000000000001100000 X
b1000000000000001100000 6"
b1000000000000001100000 Z"
0u"
1t"
0s"
0r"
1q"
1Y"
b1001100010000000000000000000100 #
b1001100010000000000000000000100 C
b1001100010000000000000000000100 ?"
b1001100010000000000000000000100 2#
b0 "
b0 B
b0 @"
b0 3#
b0 D"
b0 T"
b0 C"
b0 P"
b1 B"
b1 U"
bx100010000000000000000000100xx K"
b1100 x"
b1100 (#
0H"
0E"
b1100 %#
b1000 z"
b100 '
b100 D
b100 |"
b100 *#
b100 {"
b100 }"
b1001100010000000000000000000100 9
b1001100010000000000000000000100 Y
b1001100010000000000000000000100 8"
b1001100010000000000000000000100 F"
b1001100010000000000000000000100 X"
b1001100010000000000000000000100 ,#
b0 +
b0 L
b0 7"
b0 G"
b0 +#
0?
#16000
b111100010000000000000000000100xx K"
#17000
b11110001000000000000000000010000 K"
#18000
b11110001000000000000000000010000 .
b11110001000000000000000000010000 O
b11110001000000000000000000010000 4"
b11110001000000000000000000010000 J"
b11110001000000000000000000010000 -#
#20000
1?
#25000
b100000100000 1
b100000100000 Q
b100000100000 ;"
b100000100000 1#
b100000100000 8
b100000100000 X
b100000100000 6"
b100000100000 Z"
b1 6
b1 V
b1 :"
b1 /#
0h"
1a"
0p"
b1 I
b1 0"
b1 @#
b1 *
b1 K
b1 2"
b1 S"
b1 <#
b10000000000000000000000000000010 ;
b10000000000000000000000000000010 [
b10000000000000000000000000000010 y"
b10000000000000000000000000000010 ~"
b10000000000000000000000000000010 )#
0t"
1s"
b101100000001000000000000000100 #
b101100000001000000000000000100 C
b101100000001000000000000000100 ?"
b101100000001000000000000000100 2#
b100 "
b100 B
b100 @"
b100 3#
b1 C"
b1 P"
b0 B"
b0 U"
b11110000000100000000000000010000 K"
b0 <
b0 \
b0 j
b1000000000000001100000 $
b1000000000000001100000 E
b1000000000000001100000 m
b1001100010000000000000000000100 &
b1001100010000000000000000000100 G
b1001100010000000000000000000100 k
b0 %
b0 F
b0 l
b100 >
b100 ^
b100 i
b100 q
1{
b10000 x"
b10000 (#
b1000000000000 n
b11110001000000000000000000010000 /
b11110001000000000000000000010000 P
b11110001000000000000000000010000 h
b11110001000000000000000000010000 &"
b11110001000000000000000000010000 ."
b11110001000000000000000000010000 v"
b11110001000000000000000000010000 &#
b10000 %#
b1100 z"
b1000 '
b1000 D
b1000 |"
b1000 *#
b1000 {"
b1000 }"
b101100000001000000000000000100 9
b101100000001000000000000000100 Y
b101100000001000000000000000100 8"
b101100000001000000000000000100 F"
b101100000001000000000000000100 X"
b101100000001000000000000000100 ,#
b100 +
b100 L
b100 7"
b100 G"
b100 +#
b1000000000000001100000 :
b1000000000000001100000 Z
b1000000000000001100000 f
b1000000000000001100000 $"
b1000000000000001100000 5#
b1001100010000000000000000000100 -
b1001100010000000000000000000100 N
b1001100010000000000000000000100 a
b1001100010000000000000000000100 9#
b0 4
b0 T
b0 e
b0 6#
b100 2
b100 R
b100 c
b100 o
b100 8#
b0 3
b0 S
b0 d
b0 p
b0 #"
b0 +"
b0 7#
b11110001000000000000000000010000 =
b11110001000000000000000000010000 ]
b11110001000000000000000000010000 g
b11110001000000000000000000010000 %"
b11110001000000000000000000010000 ,"
b11110001000000000000000000010000 4#
b0 ,
b0 M
b0 `
b0 :#
0?
#28000
b11110000000100000000000000010100 .
b11110000000100000000000000010100 O
b11110000000100000000000000010100 4"
b11110000000100000000000000010100 J"
b11110000000100000000000000010100 -#
#30000
1?
#35000
b100 1
b100 Q
b100 ;"
b100 1#
0<"
b100 8
b100 X
b100 6"
b100 Z"
b0 6
b0 V
b0 :"
b0 /#
0a"
0c"
1^"
b0 I
b0 0"
b0 @#
b0 5
b0 U
b0 5"
b0 O"
b0 0#
b0 *
b0 K
b0 2"
b0 S"
b0 <#
b1100111100100000000000000 ;
b1100111100100000000000000 [
b1100111100100000000000000 y"
b1100111100100000000000000 ~"
b1100111100100000000000000 )#
b100000100000 $
b100000100000 E
b100000100000 m
b101100000001000000000000000100 &
b101100000001000000000000000100 G
b101100000001000000000000000100 k
b100 %
b100 F
b100 l
b10 3"
b10 I"
b10 L"
1u"
0s"
0q"
0Y"
b10000000000000000000000000000010 #
b10000000000000000000000000000010 C
b10000000000000000000000000000010 ?"
b10000000000000000000000000000010 2#
b1000 "
b1000 B
b1000 @"
b1000 3#
b0 C"
b0 P"
b11100000000000000000000000001000 K"
b10 b
b10 r
b10 ""
0{
1v
b10100 x"
b10100 (#
b100 n
b11111111111111111111111111111101 >
b11111111111111111111111111111101 ^
b11111111111111111111111111111101 i
b11111111111111111111111111111101 q
b11110000000100000000000000010100 /
b11110000000100000000000000010100 P
b11110000000100000000000000010100 h
b11110000000100000000000000010100 &"
b11110000000100000000000000010100 ."
b11110000000100000000000000010100 v"
b11110000000100000000000000010100 &#
b10100 %#
b10000 z"
b1100 '
b1100 D
b1100 |"
b1100 *#
b1100 {"
b1100 }"
b100000100000 :
b100000100000 Z
b100000100000 f
b100000100000 $"
b100000100000 5#
b101100000001000000000000000100 -
b101100000001000000000000000100 N
b101100000001000000000000000100 a
b101100000001000000000000000100 9#
b1 3
b1 S
b1 d
b1 p
b1 #"
b1 +"
b1 7#
b11110000000100000000000000010100 =
b11110000000100000000000000010100 ]
b11110000000100000000000000010100 g
b11110000000100000000000000010100 %"
b11110000000100000000000000010100 ,"
b11110000000100000000000000010100 4#
b100 ,
b100 M
b100 `
b100 :#
b10000000000000000000000000000010 9
b10000000000000000000000000000010 Y
b10000000000000000000000000000010 8"
b10000000000000000000000000000010 F"
b10000000000000000000000000000010 X"
b10000000000000000000000000000010 ,#
b1000 +
b1000 L
b1000 7"
b1000 G"
b1000 +#
0?
#36000
b1000 K"
#38000
b10000 .
b10000 O
b10000 4"
b10000 J"
b10000 -#
#40000
1?
#45000
b1001000000 1
b1001000000 Q
b1001000000 ;"
b1001000000 1#
b1001000000 8
b1001000000 X
b1001000000 6"
b1001000000 Z"
b111 6
b111 V
b111 :"
b111 /#
b1001 7
b1001 W
b1001 9"
b1001 .#
1["
1p"
0^"
b1001 5
b1001 U
b1001 5"
b1001 O"
b1001 0#
b1001 H
b1001 /"
b1001 M"
b1001 A#
b111 I
b111 0"
b111 @#
b111 *
b111 K
b111 2"
b111 S"
b111 <#
b1001 )
b1001 J
b1001 1"
b1001 W"
b1001 =#
b1100111100000000000000000 ;
b1100111100000000000000000 [
b1100111100000000000000000 y"
b1100111100000000000000000 ~"
b1100111100000000000000000 )#
b1000000000000000000000000000000 3"
b1000000000000000000000000000000 I"
b1000000000000000000000000000000 L"
0u"
b1100111100100000000000000 #
b1100111100100000000000000 C
b1100111100100000000000000 ?"
b1100111100100000000000000 2#
b1100 "
b1100 B
b1100 @"
b1100 3#
b1001 D"
b1001 T"
b111 C"
b111 P"
b110 B"
b110 U"
b110011110010000000000000000 K"
1'"
b100 $
b100 E
b100 m
b10000000000000000000000000000010 &
b10000000000000000000000000000010 G
b10000000000000000000000000000010 k
b1000 %
b1000 F
b1000 l
0v
b11000 x"
b11000 (#
1H"
b0 n
b0 b
b0 r
b0 ""
b0 >
b0 ^
b0 i
b0 q
b10000 /
b10000 P
b10000 h
b10000 &"
b10000 ."
b10000 v"
b10000 &#
b11000 %#
b10100 z"
b10000 '
b10000 D
b10000 |"
b10000 *#
b10000 {"
b10000 }"
b1100111100100000000000000 9
b1100111100100000000000000 Y
b1100111100100000000000000 8"
b1100111100100000000000000 F"
b1100111100100000000000000 X"
b1100111100100000000000000 ,#
b1100 +
b1100 L
b1100 7"
b1100 G"
b1100 +#
b100 :
b100 Z
b100 f
b100 $"
b100 5#
b10000000000000000000000000000010 -
b10000000000000000000000000000010 N
b10000000000000000000000000000010 a
b10000000000000000000000000000010 9#
b0 2
b0 R
b0 c
b0 o
b0 8#
b0 3
b0 S
b0 d
b0 p
b0 #"
b0 +"
b0 7#
b10000 =
b10000 ]
b10000 g
b10000 %"
b10000 ,"
b10000 4#
b1000 ,
b1000 M
b1000 `
b1000 :#
0?
#48000
b110011110010000000000001100 .
b110011110010000000000001100 O
b110011110010000000000001100 4"
b110011110010000000000001100 J"
b110011110010000000000001100 -#
#50000
1?
#55000
b1000 7
b1000 W
b1000 9"
b1000 .#
b1000 5
b1000 U
b1000 5"
b1000 O"
b1000 0#
b1000 H
b1000 /"
b1000 M"
b1000 A#
b1000 )
b1000 J
b1000 1"
b1000 W"
b1000 =#
bx ;
bx [
bx y"
bx ~"
bx )#
0'"
b1001 <
b1001 \
b1001 j
b1001000000 $
b1001000000 E
b1001000000 m
b1100111100100000000000000 &
b1100111100100000000000000 G
b1100111100100000000000000 k
b1100 %
b1100 F
b1100 l
b0 3"
b0 I"
b0 L"
b1100111100000000000000000 #
b1100111100000000000000000 C
b1100111100000000000000000 ?"
b1100111100000000000000000 2#
b10000 "
b10000 B
b10000 @"
b10000 3#
b1000 D"
b1000 T"
b110011110000000000000000000 K"
b10000 >
b10000 ^
b10000 i
b10000 q
1s
b11100 x"
b11100 (#
b1 n
b110011110010000000000001100 /
b110011110010000000000001100 P
b110011110010000000000001100 h
b110011110010000000000001100 &"
b110011110010000000000001100 ."
b110011110010000000000001100 v"
b110011110010000000000001100 &#
b11100 %#
b11000 z"
b10100 '
b10100 D
b10100 |"
b10100 *#
b10100 {"
b10100 }"
b1001000000 :
b1001000000 Z
b1001000000 f
b1001000000 $"
b1001000000 5#
b1100111100100000000000000 -
b1100111100100000000000000 N
b1100111100100000000000000 a
b1100111100100000000000000 9#
b1001 4
b1001 T
b1001 e
b1001 6#
b1001 2
b1001 R
b1001 c
b1001 o
b1001 8#
b111 3
b111 S
b111 d
b111 p
b111 #"
b111 +"
b111 7#
b110011110010000000000001100 =
b110011110010000000000001100 ]
b110011110010000000000001100 g
b110011110010000000000001100 %"
b110011110010000000000001100 ,"
b110011110010000000000001100 4#
b1100 ,
b1100 M
b1100 `
b1100 :#
b1100111100000000000000000 9
b1100111100000000000000000 Y
b1100111100000000000000000 8"
b1100111100000000000000000 F"
b1100111100000000000000000 X"
b1100111100000000000000000 ,#
b10000 +
b10000 L
b10000 7"
b10000 G"
b10000 +#
0?
#58000
b110011110000000000000010000 .
b110011110000000000000010000 O
b110011110000000000000010000 4"
b110011110000000000000010000 J"
b110011110000000000000010000 -#
#60000
1?
#65000
bx 1
bx Q
bx ;"
bx 1#
x<"
x="
x>"
bx 8
bx X
bx 6"
bx Z"
bx 6
bx V
bx :"
bx /#
bx 7
bx W
bx 9"
bx .#
xh"
xj"
x\"
xk"
x]"
xf"
xe"
xg"
xb"
xi"
xa"
xn"
x["
x`"
xo"
xp"
xc"
xl"
x_"
x^"
xd"
xm"
bx 5
bx U
bx 5"
bx O"
bx 0#
bx H
bx /"
bx M"
bx A#
bx I
bx 0"
bx @#
bx *
bx K
bx 2"
bx S"
bx <#
bx )
bx J
bx 1"
bx W"
bx =#
bx0000000000000000 3"
bx0000000000000000 I"
bx0000000000000000 L"
xu"
xt"
xs"
xr"
xq"
xY"
bx #
bx C
bx ?"
bx 2#
b10100 "
b10100 B
b10100 @"
b10100 3#
bx D"
bx T"
bx C"
bx P"
bx B"
bx U"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxx00 K"
b1000 <
b1000 \
b1000 j
b1100111100000000000000000 &
b1100111100000000000000000 G
b1100111100000000000000000 k
b10000 %
b10000 F
b10000 l
b100000 x"
b100000 (#
xH"
xE"
b1111 >
b1111 ^
b1111 i
b1111 q
b110011110000000000000010000 /
b110011110000000000000010000 P
b110011110000000000000010000 h
b110011110000000000000010000 &"
b110011110000000000000010000 ."
b110011110000000000000010000 v"
b110011110000000000000010000 &#
b100000 %#
b11100 z"
b11000 '
b11000 D
b11000 |"
b11000 *#
b11000 {"
b11000 }"
bx 9
bx Y
bx 8"
bx F"
bx X"
bx ,#
b10100 +
b10100 L
b10100 7"
b10100 G"
b10100 +#
b1100111100000000000000000 -
b1100111100000000000000000 N
b1100111100000000000000000 a
b1100111100000000000000000 9#
b1000 4
b1000 T
b1000 e
b1000 6#
b1000 2
b1000 R
b1000 c
b1000 o
b1000 8#
b110011110000000000000010000 =
b110011110000000000000010000 ]
b110011110000000000000010000 g
b110011110000000000000010000 %"
b110011110000000000000010000 ,"
b110011110000000000000010000 4#
b10000 ,
b10000 M
b10000 `
b10000 :#
0?
#66000
bx00 K"
#68000
bx .
bx O
bx 4"
bx J"
bx -#
#70000
1?
#75000
x(
x*"
x("
x'"
x)"
bx <
bx \
bx j
bx $
bx E
bx m
bx &
bx G
bx k
b10100 %
b10100 F
b10100 l
b11000 "
b11000 B
b11000 @"
b11000 3#
x{
x}
xt
x~
xu
xy
xx
xz
xw
x|
xv
x!"
xs
b100100 x"
b100100 (#
bx n
b0 >
b0 ^
b0 i
b0 q
bx /
bx P
bx h
bx &"
bx ."
bx v"
bx &#
b100100 %#
b100000 z"
b11100 '
b11100 D
b11100 |"
b11100 *#
b11100 {"
b11100 }"
bx :
bx Z
bx f
bx $"
bx 5#
bx -
bx N
bx a
bx 9#
bx 4
bx T
bx e
bx 6#
bx 2
bx R
bx c
bx o
bx 8#
bx 3
bx S
bx d
bx p
bx #"
bx +"
bx 7#
bx =
bx ]
bx g
bx %"
bx ,"
bx 4#
b10100 ,
b10100 M
b10100 `
b10100 :#
b11000 +
b11000 L
b11000 7"
b11000 G"
b11000 +#
0?
#80000
1?
#85000
b11100 "
b11100 B
b11100 @"
b11100 3#
b11000 %
b11000 F
b11000 l
b101000 x"
b101000 (#
b101000 %#
b100100 z"
b100000 '
b100000 D
b100000 |"
b100000 *#
b100000 {"
b100000 }"
b11100 +
b11100 L
b11100 7"
b11100 G"
b11100 +#
b11000 ,
b11000 M
b11000 `
b11000 :#
0?
#90000
1?
#95000
b11100 %
b11100 F
b11100 l
b100000 "
b100000 B
b100000 @"
b100000 3#
b101100 x"
b101100 (#
b101100 %#
b101000 z"
b100100 '
b100100 D
b100100 |"
b100100 *#
b100100 {"
b100100 }"
b11100 ,
b11100 M
b11100 `
b11100 :#
b100000 +
b100000 L
b100000 7"
b100000 G"
b100000 +#
0?
#100000
1?
#105000
b100100 "
b100100 B
b100100 @"
b100100 3#
b100000 %
b100000 F
b100000 l
b110000 x"
b110000 (#
b110000 %#
b101100 z"
b101000 '
b101000 D
b101000 |"
b101000 *#
b101000 {"
b101000 }"
b100100 +
b100100 L
b100100 7"
b100100 G"
b100100 +#
b100000 ,
b100000 M
b100000 `
b100000 :#
0?
#110000
1?
#115000
b100100 %
b100100 F
b100100 l
b101000 "
b101000 B
b101000 @"
b101000 3#
b110100 x"
b110100 (#
b110100 %#
b110000 z"
b101100 '
b101100 D
b101100 |"
b101100 *#
b101100 {"
b101100 }"
b100100 ,
b100100 M
b100100 `
b100100 :#
b101000 +
b101000 L
b101000 7"
b101000 G"
b101000 +#
0?
#120000
1?
#125000
b101100 "
b101100 B
b101100 @"
b101100 3#
b101000 %
b101000 F
b101000 l
b111000 x"
b111000 (#
b111000 %#
b110100 z"
b110000 '
b110000 D
b110000 |"
b110000 *#
b110000 {"
b110000 }"
b101100 +
b101100 L
b101100 7"
b101100 G"
b101100 +#
b101000 ,
b101000 M
b101000 `
b101000 :#
0?
#130000
1?
#135000
b101100 %
b101100 F
b101100 l
b110000 "
b110000 B
b110000 @"
b110000 3#
b111100 x"
b111100 (#
b111100 %#
b111000 z"
b110100 '
b110100 D
b110100 |"
b110100 *#
b110100 {"
b110100 }"
b101100 ,
b101100 M
b101100 `
b101100 :#
b110000 +
b110000 L
b110000 7"
b110000 G"
b110000 +#
0?
#140000
1?
#145000
b110100 "
b110100 B
b110100 @"
b110100 3#
b110000 %
b110000 F
b110000 l
b1000000 x"
b1000000 (#
b1000000 %#
b111100 z"
b111000 '
b111000 D
b111000 |"
b111000 *#
b111000 {"
b111000 }"
b110100 +
b110100 L
b110100 7"
b110100 G"
b110100 +#
b110000 ,
b110000 M
b110000 `
b110000 :#
0?
#150000
1?
